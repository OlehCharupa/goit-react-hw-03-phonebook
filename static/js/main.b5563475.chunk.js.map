{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/PhoneBooks/PhoneBooks.js","components/App.js","index.js"],"names":["formInitialState","name","number","ContactForm","state","inputHandler","target","value","setState","submitHendler","e","preventDefault","singleContact","props","addContact","this","className","onSubmit","type","onChange","Component","ContactList","id","deleteContact","onClick","Filter","filter","stateFilter","PhoneBooks","contacts","objContact","console","log","some","contact","alert","prev","uuidv4","filterName","toLowerCase","includes","perContacts","localStorage","getItem","JSON","parse","prevProp","prevState","setItem","stringify","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5563475.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./ContactForm.css\"\r\nimport PropTypes from 'prop-types';\r\n\r\nconst formInitialState = {\r\n    name: \"\",\r\n    number: \"\",\r\n}\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        ...formInitialState\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        const { name, value } = target\r\n        this.setState(() => ({\r\n            [name]: value\r\n        }))\r\n    }\r\n    submitHendler = (e) => {\r\n        const { name, number } = this.state\r\n        e.preventDefault();\r\n        const singleContact = {\r\n            name,\r\n            number,\r\n        }\r\n        this.props.addContact(singleContact)\r\n\r\n        this.setState({\r\n            ...formInitialState\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { name, number } = this.state\r\n        return (\r\n            <form className=\"contactForm\" onSubmit={this.submitHendler}>\r\n                <label className=\"labelName\"> Name\r\n                <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        className=\"inputName\"\r\n                        value={name}\r\n                        onChange={this.inputHandler}\r\n                    />\r\n                </label>\r\n                <label className=\"labelNumber\"> Number\r\n                <input\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        className=\"inputNumber\"\r\n                        value={number}\r\n                        onChange={this.inputHandler}\r\n                    />\r\n                </label>\r\n\r\n                <button type=\"submit\"\r\n                    className=\"btnForm\"\r\n                >\r\n                    Add contact\r\n                    </button>\r\n            </form>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ContactForm;\r\nContactForm.propTypes = {\r\n    addContact: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport \"./ContactList.css\"\r\nimport PropTypes from 'prop-types';\r\nconst ContactList = ({ name, number, id, deleteContact }) => {\r\n    const deleteItem = () => {\r\n        deleteContact(id)\r\n    }\r\n    return (\r\n        <li className=\"contactItem\">\r\n            <p className=\"contactName\">{name}</p>\r\n            <p className=\"contactNumber\">{number}</p>\r\n            <button type=\"button\" className=\"del_Btn\" onClick={deleteItem}></button>\r\n        </li>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    deleteContact: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport \"./Filter.css\"\r\nimport PropTypes from 'prop-types';\r\nconst Filter = ({ filter, stateFilter }) => {\r\n    return (\r\n        <label className=\"labelSearch\" >\r\n            Find contacts by name\r\n            <input\r\n                className=\"inputSearch\"\r\n                name=\"filter\"\r\n                type=\"text\"\r\n                value={filter}\r\n                onChange={stateFilter}\r\n            />\r\n        </label>\r\n    );\r\n};\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string.isRequired,\r\n    stateFilter: PropTypes.func.isRequired\r\n}","import React, { Component } from 'react';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from \"../ContactList/ContactList\"\r\nimport Filter from \"../Filter/Filter\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nclass PhoneBooks extends Component {\r\n    state = {\r\n        contacts: [],\r\n        filter: ''\r\n    }\r\n    componentDidMount() {\r\n        const perContacts = localStorage.getItem(\"contacts\")\r\n        if (perContacts) {\r\n            this.setState({\r\n                contacts: JSON.parse(perContacts)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(prevProp, prevState) {\r\n        if (prevState.contacts !== this.state.contacts) {\r\n            localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\r\n        }\r\n    }\r\n    addContact = (objContact) => {\r\n        console.log(objContact);\r\n        this.state.contacts.some(contact => contact.name === objContact.name)\r\n            ? alert(`Контакт с именем ${objContact.name} уже существует!`)\r\n\r\n            : this.setState((prev) => ({\r\n                contacts: [...prev.contacts, {\r\n                    ...objContact, id: uuidv4()\r\n                }]\r\n            }))\r\n    }\r\n    deleteContact = id => {\r\n        this.setState({\r\n            contacts: this.state.contacts.filter(contact => contact.id !== id)\r\n        })\r\n    }\r\n    filterName = () => {\r\n        return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter.toLowerCase()))\r\n\r\n    }\r\n    stateFilter = (e) => {\r\n        this.setState({ filter: e.target.value })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"title\">Phonebook</h1>\r\n                <ContactForm\r\n                    addContact={this.addContact} />\r\n                <Filter stateFilter={this.stateFilter} filter={this.state.filter} />\r\n                <h2 className=\"subTitle\">Contacts</h2>\r\n                <ul className=\"contactList\">\r\n                    {this.filterName().map(contact => <ContactList\r\n                        key={contact.id}\r\n                        {...contact}\r\n                        deleteContact={this.deleteContact} />)}\r\n                </ul>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PhoneBooks;","import React from 'react';\nimport './App.css';\nimport PhoneBooks from './PhoneBooks/PhoneBooks';\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <PhoneBooks />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}